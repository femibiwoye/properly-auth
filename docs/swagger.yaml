basePath: /
definitions:
  models.AddLandlord:
    properties:
      propertyID:
        type: string
      userID:
        type: string
    type: object
  models.ChangeUserPassword:
    properties:
      oldpassword:
        type: string
      password:
        type: string
    type: object
  models.ChangeUserPasswordFromToken:
    properties:
      email:
        type: string
      password:
        type: string
      token:
        type: string
    type: object
  models.ComplaintsModel:
    properties:
      date:
        type: integer
      propertyID:
        type: string
      text:
        type: string
    type: object
  models.CreateProperty:
    properties:
      address:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  models.HTTPRes:
    properties:
      code:
        type: integer
      data:
        type: object
      message:
        example: status bad request
        type: string
    type: object
  models.InspectionDeleteModel:
    properties:
      inspectionID:
        type: string
    type: object
  models.InspectionModel:
    properties:
      date:
        type: integer
      propertyID:
        type: string
      text:
        type: string
    type: object
  models.ListType:
    properties:
      propertyID:
        type: string
    type: object
  models.LoginData:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.ProfileImage:
    properties:
      image:
        items:
          type: integer
        type: array
    type: object
  models.ResetPassword:
    properties:
      email:
        type: string
    type: object
  models.SignUpData:
    properties:
      confirmpassword:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        type: string
      type:
        type: string
    type: object
  models.UpdateInspectionModel:
    properties:
      date:
        type: integer
      inspectionID:
        type: string
      text:
        type: string
    type: object
  models.UpdateUserModel:
    properties:
      address:
        type: string
      dob:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      phoneNumber:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: properly backend.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /landlord/property/add/:
    post:
      consumes:
      - application/json
      parameters:
      - description: useraccountdetails
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.AddLandlord'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to add a landloard to a property. Only manager are capable
        of adding landlord property
      tags:
      - accounts
  /landlord/property/list/:
    get:
      consumes:
      - application/json
      parameters:
      - description: useraccountdetails
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.ListType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: return the landlords added to a property
      tags:
      - accounts
  /landlord/property/remove/:
    delete:
      consumes:
      - application/json
      parameters:
      - description: useraccountdetails
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.AddLandlord'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to remove a landloard from a property. Only manager are capable
        of adding landlord property
      tags:
      - accounts
  /list/complaint/:
    get:
      consumes:
      - application/json
      parameters:
      - description: requestdetails
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.ListType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to list all the complaints made on a property
      tags:
      - accounts
  /list/inspection/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to list all the Inspection created by user
      tags:
      - accounts
  /list/properties/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to list all the property created by user
      tags:
      - accounts
  /login/:
    post:
      consumes:
      - application/json
      description: login a user
      parameters:
      - description: useraccountdetails
        in: body
        name: userDetails
        required: true
        schema:
          $ref: '#/definitions/models.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: SignIn is used to login a user
      tags:
      - accounts
  /make/complaints/:
    post:
      consumes:
      - application/json
      parameters:
      - description: requestdetails
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.ComplaintsModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to add a landloard to a property. Only manager are capable
        of adding landlord property
      tags:
      - accounts
  /manager/create/property/:
    put:
      consumes:
      - application/json
      parameters:
      - description: useraccountdetails
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.CreateProperty'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to Create a property. Only manager are capable of creating
        property
      tags:
      - accounts
  /manager/inspection/delete/:
    delete:
      consumes:
      - application/json
      parameters:
      - description: details
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.InspectionDeleteModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to remove an inspection
      tags:
      - accounts
  /manager/inspection/schedule/:
    post:
      consumes:
      - application/json
      parameters:
      - description: request details
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.InspectionModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to create an inspection on a property
      tags:
      - accounts
  /manager/inspection/update/:
    put:
      consumes:
      - application/json
      parameters:
      - description: request details
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.UpdateInspectionModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint update an existing inspection
      tags:
      - accounts
  /manager/remove/attachment/:
    delete:
      consumes:
      - application/json
      parameters:
      - description: details
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.CreateProperty'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to remove an image or document attached to a property
      tags:
      - accounts
  /manager/update/property/:
    put:
      consumes:
      - application/json
      parameters:
      - description: useraccountdetails
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.CreateProperty'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to edit a property field. Only manager are capable of updating
        property
      tags:
      - accounts
  /reset/update-password/:
    put:
      consumes:
      - application/json
      description: user to reset link or tokne to user mail
      parameters:
      - description: useraccountdetails
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ResetPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: ResetPassword send link/token to user depending on the platform
      tags:
      - accounts
  /reset/validate-token/:
    post:
      consumes:
      - application/json
      description: user to change user password via mail
      parameters:
      - description: userdetails
        in: body
        name: userDetails
        required: true
        schema:
          $ref: '#/definitions/models.ChangeUserPasswordFromToken'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: ChangePasswordFromToken changes user password from token sent along
      tags:
      - accounts
  /serve/media/:filename:
    get:
      consumes:
      - application/json
      produces:
      - image/gif
      - image/png
      - image/jpeg
      security:
      - ApiKeyAuth: []
      summary: endpoints to return save files
      tags:
      - accounts
  /signup/:
    post:
      consumes:
      - application/json
      description: SignUp user with email or name
      parameters:
      - description: useraccountdetails
        in: body
        name: userDetails
        required: true
        schema:
          $ref: '#/definitions/models.SignUpData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      summary: is the endpoint for user signup.
  /tenant/property/add/:
    post:
      consumes:
      - application/json
      parameters:
      - description: useraccountdetails
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.AddLandlord'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to add a tenant to a property. Only manager are capable of
        adding landlord property
      tags:
      - accounts
  /tenant/property/list/:
    get:
      consumes:
      - application/json
      parameters:
      - description: useraccountdetails
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.ListType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: list all tenant in a property
      tags:
      - accounts
  /tenant/property/remove/:
    delete:
      consumes:
      - application/json
      parameters:
      - description: useraccountdetails
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.AddLandlord'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to remove a tanent from a property. Only manager are capable
        of adding landlord property
      tags:
      - accounts
  /update/complaint/:
    put:
      consumes:
      - application/json
      parameters:
      - description: useraccountdetails
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.AddLandlord'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to remove a landloard from a property. Only manager are capable
        of adding landlord property
      tags:
      - accounts
  /user/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: returns the user profile
      tags:
      - accounts
  /user/change-password/:
    put:
      consumes:
      - application/json
      description: user to change user password via mail
      parameters:
      - description: userdetails
        in: body
        name: userDetails
        required: true
        schema:
          $ref: '#/definitions/models.ChangeUserPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: ChangePasswordAuth changes a user password for an authorized user
      tags:
      - accounts
  /user/update-profile-image/:
    put:
      consumes:
      - multipart/form-data;
      parameters:
      - description: useraccountdetails
        in: body
        name: userDetails
        required: true
        schema:
          $ref: '#/definitions/models.ProfileImage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to update user profile
      tags:
      - accounts
  /user/update/:
    put:
      consumes:
      - application/json
      parameters:
      - description: useraccountdetails
        in: body
        name: userDetails
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to update user profile
      tags:
      - accounts
  /vendor/property/add/:
    put:
      consumes:
      - application/json
      parameters:
      - description: useraccountdetails
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.AddLandlord'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to add a tenant to a property. Only manager are capable of
        adding landlord property
      tags:
      - accounts
  /vendor/property/remove/:
    put:
      consumes:
      - application/json
      parameters:
      - description: useraccountdetails
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/models.AddLandlord'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPRes'
      security:
      - ApiKeyAuth: []
      summary: endpoint to remove a tanent from a property. Only manager are capable
        of adding landlord property
      tags:
      - accounts
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    authorizationUrl: ""
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    authorizationUrl: ""
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
